- hosts: ceph-mon.helium
  tasks:
  - action: ceph_facts
  - name: create root image pool
    command: ceph osd pool create rbd-root-images 16 replicated replicated_hosts_hdd
    when: '"rbd-root-images" not in rbd_images'
- hosts: root-builder-bootstrap.helium
  vars:
    ceph_client_name: client.root-builder-bootstrap
    target_hostname: root-builder
  pre_tasks:
  - apt:
      name: aptitude
      state: present
  - apt:
      upgrade: yes
  roles:
  - friendship-express
  - role: ceph-rbd
    ceph_rbd_rw_pools:
    - rbd-root-images
    - rbd-common-root-images
    - rbd-system-rw
  tasks:
  - action: ceph_facts
    delegate_to: ceph-mon.helium
  - name: create middle root image
    command: rbd create -n client.root-builder-bootstrap --keyring=/etc/ceph/ceph.client.root-builder-bootstrap.keyring --size 10240 rbd-root-images/{{target_hostname}}
    when: 'target_hostname not in rbd_images["rbd-root-images"]'
  - name: create middle root image
    command: rbd create -n client.root-builder-bootstrap --keyring=/etc/ceph/ceph.client.root-builder-bootstrap.keyring --size 10240 rbd-system-rw/{{target_hostname}}
    when: 'target_hostname not in rbd_images["rbd-system-rw"]'

  - name: nbd mount block
    block:

    - name: map nbd root image
      shell: "CEPH_ARGS=\"--name {{ceph_client_name}}\" rbd-nbd map rbd-root-images/{{target_hostname}}"
      register: map_nbd
    - set_fact:
        root_nbd: '{{map_nbd.stdout}}'

    - name: map nbd default system rw image
      shell: "CEPH_ARGS=\"--name {{ceph_client_name}}\" rbd-nbd map  rbd-system-rw/{{target_hostname}}"
      register: map_nbd
    - set_fact:
        system_rw_nbd: '{{map_nbd.stdout}}'

    - name: run debootsrap
      import_tasks: utils/run_debootstrap.yml
      static: yes

    - tempfile:
        state: directory
      register: tempfile_mount_root

    - name: partition system-rw
      parted:
          device: "{{system_rw_nbd}}"
          number: 1
          part_start: 1MiB
          part_end: 100%
          state: present

    - name: remount block
      block:

      - name: remount root image
        command: "mount {{root_nbd}}p4 {{tempfile_mount_root.path}}"
      - name: remount boot image
        command: "mount {{root_nbd}}p2 {{tempfile_mount_root.path}}/boot"

      - name: open middle etc
        import_role:
            name: encrypted_device
        vars:
            device: "{{root_nbd}}p3"
            target: "root_builder_crypt_etc"
            keyfile_content: "{{hostvars[target_hostname].disk_keyfile}}"
      - name: mount middle etc
        import_role:
            name: mkfs_mount
        vars:
            fstype: ext4
            device: "/dev/mapper/root_builder_crypt_etc"
            path: "{{tempfile_mount_root.path}}/mnt/__middle_etc"

      - name: open system rw
        import_role:
            name: encrypted_device
        vars:
            device: "{{system_rw_nbd}}p1"
            target: "root_builder_crypt_system_rw"
            keyfile_content: "{{hostvars[target_hostname].disk_keyfile}}"
      - name: mount system rw
        import_role:
            name: mkfs_mount
        vars:
            fstype: ext4
            device: "/dev/mapper/root_builder_crypt_system_rw"
            path: "{{tempfile_mount_root.path}}/mnt/__system_rw"

      # the UUIDs are possibly changed by mkfs_mount
      - name: trigger udev to detect new block devices
        command: udevadm trigger
      - name: wait for udev to complete its refresh
        command: udevadm settle

      - name: pseudo-fs block
        block:
        - name: mount pseudo-filesystems
          command: "mount --bind /{{item}} {{tempfile_mount_root.path}}/{{item}}"
          with_items: [dev, sys, proc]
        - name: install grub on system rw
          command: "chroot {{tempfile_mount_root.path}} grub-install {{system_rw_nbd}} --locales="
        always:
        - name: umount pseudo-filesystems
          command: "umount -l {{tempfile_mount_root.path}}/{{item}}"
          with_items: [dev, sys, proc]

      - name: configure vm
        import_role:
            name: base_vm_chroot
        vars:
            chroot_path: "{{tempfile_mount_root.path}}"

      always:
      - name: fsync
        command: sync
        changed_when: false

      - name: unmount system rw image
        command: "umount {{tempfile_mount_root.path}}/mnt/__middle_etc"
        failed_when: false
      - name: unmount system rw image
        command: "umount {{tempfile_mount_root.path}}/mnt/__system_rw"
        failed_when: false
      - name: unmount boot image
        command: "umount {{tempfile_mount_root.path}}/boot"
        failed_when: false
      - name: unmount overlay root
        command: "umount {{tempfile_mount_root.path}}"
        failed_when: false
      - name: close encrypted etc
        command: "cryptsetup luksClose root_builder_crypt_etc"
        failed_when: false
      - name: close encrypted system rw
        command: "cryptsetup luksClose root_builder_crypt_system_rw"
        failed_when: false

    always:
    - name: unmap rbd device
      command: "rbd-nbd unmap {{root_nbd}}"
      failed_when: false
    - name: unmap rbd device
      command: "rbd-nbd unmap {{system_rw_nbd}}"
      failed_when: false
