- name: set hostname
  copy:
      content: "{{target_hostname}}"
      dest: "{{chroot_path}}/etc/hostname}}"

- name: configure interface
  copy:
      dest: "{{chroot_path}}/etc/network/interfaces.d/ens3"
      content: |
          auto ens3
          iface ens3 inet dhcp
          iface ens3 inet6 auto

- name: add authorized_keys
  import_tasks: ssh_authorized_keys.yml
  static: yes
  vars:
      home_path: "{{chroot_path}}/root"

- name: install packages
  command: chroot {{chroot_path}} eatmydata -- apt-get install -q -y python # htop bash-completion locales debootstrap openssh-server # python3 ruby php vim emacs debian-goodies iotop iftop nethogs tcpdump lsof

- name: disable systemd-timesyncd
  command: chroot {{chroot_path}} systemctl disable systemd-timesyncd
  # Disabled for two two reasons:
  # 1. it tries to write to /var/lib/systemd/clock (to ensure a monotonic clock
  #    in case the hardware does not support it)
  # 2. this is a VM, time is set by the host so it's useless

- name: prepare mount points
  file:
      path: "{{chroot_path}}/mnt/{{item}}"
      state: directory
  with_items:
  - __middle_etc
  - __upper_etc
  - __system_rw/var-log/datadir
  - __system_rw/var-log/workdir

- name: install and configure cjdns
  import_tasks: cjdns.yml
  static: yes
  vars:
      chroot_dir: "{{chroot_path}}"

- name: get uuids
  include_tasks: lsblk.yml
  with_items:
  - {device: "{{root_nbd}}p2", var: lsblk_boot}
  - {device: "{{root_nbd}}p3", var: lsblk_middle_etc}
  - {device: "{{root_nbd}}p4", var: lsblk_root}
  - {device: "{{system_rw_nbd}}p1", var: lsblk_system_rw}

- name: configure fstab and crypttab
  template:
      src: "{{item}}"
      dest: "{{chroot_path}}/etc/{{item}}"
  vars:
      boot_uuid: "{{lsblk_boot['blockdevices'][0]['uuid']}}"
      root_uuid: "{{lsblk_root['blockdevices'][0]['uuid']}}"
      middle_etc_uuid: "{{lsblk_middle_etc['blockdevices'][0]['uuid']}}"
      system_rw_uuid: "{{lsblk_system_rw['blockdevices'][0]['uuid']}}"
      etc_crypt_target: root_builder_crypt_etc
  with_items:
  - fstab
  - crypttab

- set_fact:
    systemd_units:
    - upper-etc.service
    - etc.target
    - disk-keyfile.service

- name: add systemd units
  template:
      src: "{{item}}"
      dest: "{{chroot_path}}/etc/systemd/system/{{item}}"
  with_items: "{{systemd_units}}"

- name: enable systemd units
  command: "chroot {{chroot_path}} systemctl enable {{item}}"
  with_items: "{{systemd_units}}"

- name: configure sshd
  template:
      src: sshd_config
      dest: "{{chroot_path}}/etc/ssh/sshd_config"
- name: drop ssh keys
  file:
      path: "{{chroot_path}}/etc/ssh/ssh_host_{{item}}"
      state: absent
  with_items: [dsa_key, dsa_key.pub, ecdsa_key, ecdsa_key.pub, rsa_key, rsa_key.pub]
- name: set public host keys
  copy:
      content: "{{hostvars[target_hostname].ssh.host_keys[item].pk}}"
      dest: "{{chroot_path}}/etc/ssh/ssh_host_{{item}}_key.pub"
  with_items: [ed25519]
- name: set private host keys
  copy:
      content: "{{hostvars[target_hostname].ssh.host_keys[item].sk}}"
      dest: "{{chroot_path}}/etc/ssh/ssh_host_{{item}}_key"
  with_items: [ed25519]


- name: auto-load overlayfs kernel module
  lineinfile:
      path: "{{chroot_path}}/etc/modules"
      line: "overlay"

